Git 命令： 
git init
git commit -m "" 存储一个当前工作区的快照，-m表示提交参数附加message
git config --global user.name ""
git config --global user.email ""

git add <filename> ： 空格分开，可以写多个

git status : 查看工作区的状态
git diff ： 比较修改的文件

git log ： 查看提交记录，也就是查看有多少快照

HEAD ： 这是一个Git的指针，指向当前的工作区的版本。

git reset --hard "" : 可以快速回滚到其他版本。一般来说可以写commit id（用git log查看） 也可以写HEAD^ 或者HEAD~20(前20个版本)

git reflog ： 查看历史命令，以便确定要回滚到哪个版本

------------------------------------------------------------------------------------------------------------------------------------------
小结：
	（1）暂存区和工作区：暂存区index或者stage，在.git目录下。
	（2）工作区：当前编辑的文件
	（3）暂存区：git add将工作区文件提交到暂存区，这里保留你要修改的文件。
	（4）资源仓库：默认创建master branch，HEAD指向branch
	（5）Git记录的是修改而且不是文件，但是二进制文件只能记录大小等一些属性。
------------------------------------------------------------------------------------------------------------------------------------------

git checkout -- filename  用来丢弃当前修改：
（1）当文件已经add到stage中，则checkout -- 后就回到添加到暂存区后的状态；
（2）文件还没add到stage中，则checkout -- 后就回到和版本库一模一样的状态；
（3）总之，就是让这个文件回到最近一次git commit或git add时的状态。

git reset HEAD filename  把暂存区的修改撤销掉（unstage）
（1）git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。
（2）版本回退：git reset HEAD^ or git reset HEAD~2 or git rest commitId




